<div class="container p-2">
    <h1>{{title}}</h1>
<!--    Check if courses was sent as undefined or not -->
    {{#if courseList}}
<!--        table for storing course items if they do exist -->
        <table class="table table-striped">
            <thead class="table-primary">
            <tr>
                <th>Course Code</th>
                <th>Course Name</th>
                <th>Course Credits</th>
                <th>Course Hours</th>
                <th>Actions</th>
            </tr>
            </thead>
            {{#each courseList}}
                <tr>
                    <td>{{this.courseCode}}</td>
                    <td>{{this.courseName}}</td>
<!--                 Centering the number elements    -->
                    <td class="text-center">{{this.courseNumCredits}}</td>
                    <td class="text-center">{{this.courseNumHoursPerWeek}}</td>
                    <td>
                        <button id="{{this.id}}edit" type="button" class="btn btn-primary editButton"
                        data-toggle="modal" data-target="#editModal">Edit</button>
                        <button id="{{this.id}}delete" type="button" class="btn btn-danger deleteButton"
                                data-toggle="modal" data-target="#deleteModal">Delete</button>
                    </td>

                </tr>
            {{/each}}
        </table>
    {{else}}
<!--        just a simple message for now -->
        <p>No courses listed</p>

    {{/if}}
    <!-- Add Modal - must be displayed even if no terms exist -->
    <div class="modal fade" id="addModal" role="dialog" tabindex="-1" aria-labelledby="addModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-success" id="addModalLabel">Create New Course</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form action="/course" method="POST">
                    <div class="modal-body">

                        <div class="invalid-feedback">{{err.id}}</div>

                        <label for="cCourseCode">Course Code:</label>
                        <input type="text" class="form-control {{#if err.courseCode}}is-invalid{{/if}}" id="cCourseCode"
                               name="courseCode" value="{{submittedCourse.courseCode}}">
                        <div class="invalid-feedback">{{err.courseCode}}</div>

                        <label for="cCourseName">Course Name:</label>
                        <input type="text" class="form-control {{#if err.courseName}}is-invalid{{/if}}" id="cCourseName"
                               name="courseName" value="{{submittedCourse.courseName}}">
                        <div class="invalid-feedback">{{err.courseName}}</div>

                        <Label for="cCourseNumCredits">Number Of Credits:</Label>
                        <input type="text" class="form-control {{#if err.courseNumCredits}}is-invalid{{/if}}" id="cCourseNumCredits" name="courseNumCredits" value="{{submittedCourse.courseNumCredits}}">
                        <div Class="invalid-feedback">{{err.courseNumCredits}}</div>

                        <Label for="cCourseNumHoursPerWeek">Number Of Hours Per Week:</Label>
                        <input type="text" class="form-control {{#if err.courseNumHoursPerWeek}}is-invalid{{/if}}" id="cCourseNumHoursPerWeek" name="courseNumHoursPerWeek" value="{{submittedInstructor.courseNumHoursPerWeek}}">
                        <div Class="invalid-feedback">{{err.courseNumHoursPerWeek}}</div>


                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="button" id="createCourse" class="btn btn-outline-success">Create</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div class="modal fade" id="editModal" role="dialog" tabindex="-1" aria-labelledby="editModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-warning" id="editModalLabel">Edit Existing Course</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form action="/course" method="POST">
                        <div class="modal-body">
                            <label for="eCourseCode">Course Code:</label>
                            <input class="form-control {{#if putErr.courseCode}}is-invalid{{/if}}" id="eCourseCode"
                                   name="courseCode" value="{{putSubmittedCourse.courseCode}}">
                            <div class="invalid-feedback">{{putErr.courseCode}}</div>

                            <label for="eCourseName">Course Name:</label>
                            <input class="form-control {{#if putErr.courseName}}is-invalid{{/if}}" id="eCourseName"
                                   name="courseName" value="{{putSubmittedCourse.courseName}}">
                            <div class="invalid-feedback">{{putErr.courseName}}</div>

                            <label for="eCourseNumCredits">Number of Credits:</label>
                            <input class="form-control {{#if putErr.courseNumCredits}}is-invalid{{/if}}" id="eCourseNumCredits"
                                   name="courseNumCredits" value="{{putSubmittedCourse.courseNumCredits}}">
                            <div class="invalid-feedback">{{putErr.courseNumCredits}}</div>

                            <label for="eCourseNumHoursPerWeek">Number of Hours Per Week:</label>
                            <input class="form-control {{#if putErr.courseNumHoursPerWeek}}is-invalid{{/if}}" id="eCourseNumHoursPerWeek"
                                   name="courseNumHoursPerWeek" value="{{putSubmittedCourse.courseNumHoursPerWeek}}">
                            <div class="invalid-feedback">{{putErr.courseNumHoursPerWeek}}</div>

                            <input type="text" id="editID" name="id" hidden />
                        </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="button" id="editInstructor" class="btn btn-outline-success">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete Modal -->
    <div class="modal fade" id="deleteModal" role="dialog" tabindex="-1" aria-labelledby="deleteModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-danger" id="deleteModalLabel">Delete Course </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form action="/course" method="POST">
                    <div class="modal-body">
                        <p id="deleteModalText">Are you sure you want to delete this course?</p>
                    </div>

                    <input type="text" id="deleteID" name="id" hidden/>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="button" id="deleteCourse" class="btn btn-outline-danger">Delete</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <button type="button" class="btn btn-outline-success" data-toggle="modal" data-target="#addModal">Add New Course</button>

</div>

<script>
    'use strict';
    reLinkButtons();

    /**
     * This function links the buttons on the page to their appropriate handlers
     */
    function reLinkButtons(){

        $('#createCourse').click(handleCreateCourse);
        $('#deleteCourse').click(handleDeleteCourse);
        $('#editCourse').click(handleEditCourse);
        $('.deleteButton').click(function() {
            handleDeleteModal(this.id.replace('delete', ''));
        });
        $('.editButton').click(function() {
            handleEditModal(this.id.replace('edit', ''));
        });
        $('.modal').on('hidden.bs.modal', function() {
            clearErrors();
        });

    }

    /**
     * This function handles what happens when a user clicks on the "delete" button
     * in the delete course modal
     * @returns {Promise<void>}
     */
    async function handleDeleteCourse() {

            const response = await fetch ('http://localhost:3000/course',{
            method:'DELETE',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                id: $('#deleteCourse').val(),
            }),
        });

        // get the HTML text response
        const data = await response.text();
        const modalID = '#deleteModal';

        loadResponse(modalID, data, !response.ok);
    }

        /**
         * This function loads a hidden form input in the delete modal with the ID of the term to delete
         * @param idToDelete    - The ID of the term to delete
         */
        function handleDeleteModal(idToDelete) {
            $('#deleteCourse').val(idToDelete);
        }

    /**
     * This function handles what happens when a user clicks on the "create" button
     * in the Create New Course modal
     * @returns {Promise<void>}
     */
    async function handleCreateCourse() {
        // send a POST request to the courseRouter
        const response = await fetch ('http://localhost:3000/course', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                // use the val() method to get the value of a form input
                courseCode:$('#cCourseCode').val(),
                courseName:$('#cCourseName').val(),
                courseNumCredits:$('#cCourseNumCredits').val(),
                courseNumHoursPerWeek:$('#cCourseNumHoursPerWeek').val(),

            }),
        });

        // get the HTML text response
        const data = await response.text();
        const modalID = '#addModal';

        loadResponse(modalID, data, !response.ok);

    }



        /**
         * This function handles what happens when a user clicks the "Save" button
         * in the Edit Existing Course modal
         * @returns {Promise<void>}
         */
        async function handleEditCourse() {
            const id = $('#editID').val();
            // send a PUT request to the router
            const response = await fetch('http://localhost:3000/course', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    // use the val() method to get the value of a form input
                    courseCode: $("#eCourseCode").val(),
                    courseName: $("#eCourseName").val(),
                    courseNumCredits: $("#eCourseNumCredits").val(),
                    courseNumHoursPerWeek: $("#eCourseNumHoursPerWeek").val(),
                    id,
                }),
            });

            // get the HTML text response
            const data = await response.text();
            const modalID = '#editModal';

            loadResponse(modalID, data, !response.ok);

            // re-load the ID
            handleEditModal(id);
        }
    /**
     * This function loads the form in the Edit Existing Course modal with the information
     * of the course the user wants to edit
     * @param idToEdit    - The ID of the course being edited
     */
    function handleEditModal(idToEdit) {
        $("#editID").val(idToEdit);
        $("#eCourseCode").val($(`#${idToEdit}courseCode`).text());
        $("#eCourseName").val($(`#${idToEdit}courseName`).text());
        $("#eCourseNumCredits").val($(`#${idToEdit}courseNumCredits`).text());
        $("#eCourseNumHoursPerWeek").val($(`#${idToEdit}courseNumHoursPerWeek`).text());

    }

            /**
     * As the server gives responses in HTML, the client needs to be able to parse that data.
     * This function replaces the HTML of the current page with the new HTML from the server
     * and pops up the last used modal if there were errors.
     * @param modalID   - The HTML id of the modal to pop up
     * @param data      - The HTML response from the server
     * @param showModal - True to show the modal, false to hide the modal
     */
    function loadResponse(modalID, data, showModal) {
        // set the whole document's HTML to be the response
        document.documentElement.innerHTML = data;
        // re-add the click handlers
        reLinkButtons();
        // refresh the modal
        const modal = $(modalID);
        modal.modal('hide');

        // if the response was not ok, pop up the modal
        if (showModal) {
            modal.modal('show');
        }
    }

    function clearErrors() {
        // Clear error messages or styling for input fields
        $('.is-invalid').removeClass('is-invalid');
        $('.invalid-feedback').text('');

        $('#cCourseCode').val('');
        $('#cCourseName').val('');
        $('#cCourseNumCredits').val('');
        $('#cCourseNumHoursPerWeek').val('');

    }

</script>