<div id="scheduleModal" class="modal fade" role="dialog" tabindex="-1" aria-labelledby="scheduleModalLabel"
     aria-hidden="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Filters For Schedule</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form action="/schedule" method="POST">
                    <div class="mb-3">
                        <label for="termSelect" class="form-label">Term: </label>
                        <select id="termSelect" name="term" onchange="checkEnable()" class="form-select">
                            <option id="blankTerm"></option>
                            {{#each terms}}
                                <option value="{{id}}">{{this.calendarYear}} - Term {{this.termNumber}}</option>
                            {{/each}}
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="programSelect" class="form-label">Program: </label>
                        <select id="programSelect" name="program" onchange="checkEnable()" class="form-select">
                            <option id="blankProgram"></option>
                            {{#each programs}}
                                <option value="{{id}}">{{programAbbreviation}}</option>
                            {{/each}}
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="groupSelect" class="form-label">Number of Groups: </label>
                        <select id="groupSelect" name="group" onchange="checkEnable()" class="form-select">
                            <option id="blankGroup"></option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary" disabled id="modalSubmit">Enter</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <!-- Change this to a loop later -->
    <div id="tabBar" class="column">
        {{#each groupArray}}
            <button id="btn{{groupLetter}}" onclick="changeGroup('{{groupLetter}}')" class="btn btn-primary">
                Group {{groupLetter}}
            </button>
        {{/each}}
    </div>
    {{#each groupArray}}
        <div id="group{{groupLetter}}" class="row container-fluid" hidden>
            <div id="calender{{groupLetter}}" class=" col-md-9 container-fluid">
                <h2>Group {{groupLetter}} Calendar</h2>
                <table class="table table-bordered table-sm table-hover border-dark">
                    <thead class="table-primary">
                    <tr>
                        <th class="text-center" scope="col" id="time">Time</th>
                        <th class="text-center" scope="col" id="mon">Monday</th>
                        <th class="text-center" scope="col" id="tues">Tuesday</th>
                        <th class="text-center" scope="col" id="wed">Wednesday</th>
                        <th class="text-center" scope="col" id="thurs">Thursday</th>
                        <th class="text-center" scope="col" id="fri">Friday</th>
                    </tr>
                    </thead>
                    <tbody>
                    {{#each timeslotMatrix}}
                        <!--loops each timeslot, outer loop is hours, inner loop is days  -->
                        <tr>
                            {{#each this}}
                                <!--                                    Do an if/else if it has data - bool created in router-->
                                <!--                                    Then the 'each' will have different attributes and be loaded differently-->
                                <!--                                    via html and the router sends attributes-->
                                {{#if this.hTime}}
                                    <td class="text-center time-cell table-primary" id="{{this.cellID}}">
                                        <p>{{this.hTime}}</p>
                                    </td>
                                {{else}}
                                    <td oncontextmenu="onCellRightClick('{{this.cellID}}', '{{this.timeslot.id}}', '{{this.timeslot.co}}')"
                                        onclick="onCellClick('{{this.cellID}}', '{{this.timeslot.id}}', '{{this.timeslot.co}}')"
                                        id="{{this.cellID}}" class="time-slot {{ this.empty }} text-center">
                                        <p>
                                            {{this.timeslot.course}}<br/>
                                            {{this.timeslot.insLast}}
                                            {{#if this.timeslot.altInsLast}}
                                                / {{this.timeslot.altInsLast}}
                                            {{/if}}<br/>
                                            {{#if this.timeslot}}
                                                Room: {{this.timeslot.Classroom.roomNumber}}
                                            {{/if}}
                                        </p>

                                    </td>
                                {{/if}}
                            {{/each}}
                        </tr>
                    {{/each}}
                    </tbody>
                </table>
            </div>
            <div class="col container-fluid">
                <div class="row">
                    <!--                    Adding in Classroom select box-->
                    <label for="classroomSelect{{groupLetter}}" class="form-label">Current Classroom:</label>
                    <select id="classroomSelect{{groupLetter}}" class="form-select">
                        {{#each ../classroomList}}
                            <option value="{{this.id}}">{{this.roomNumber}}</option>
                        {{/each}}
                    </select>
                </div>

                <h2>Group {{groupLetter}} Courses</h2>
                <div class="row">
                    {{#each COArray}}
                        <div class="mb-3">
                            <div class="card bg-secondary course-offering"
                                 onclick="onCOClick('{{this.id}}', '{{this.dName}}')" id="{{this.dName}}">
                                <div class="card-body">
                                    <h5 class="card-title">{{this.name}}</h5>
                                    <p class="card-text">{{this.insFirst}} {{this.insLast}}</p>
                                    {{#if this.altInsFirst}}
                                        <p class="card-text">Alternate: {{this.altInsFirst}} {{this.altInsLast}}</p>
                                    {{/if}}
                                    <p class="card-text">{{this.startDate}} - {{this.endDate}}</p>
                                </div>
                            </div>
                        </div>
                    {{/each}}
                </div>
            </div>
        </div>
    {{/each}}
    <a href="http://localhost:3000" class="btn btn-success mt-3">Return</a>
</div>
<script>
    'use strict';

    let currCO = null;
    let currDOM = null;
    let visibleGroup = null;

    window.onload = function() {
        const modal = new bootstrap.Modal(document.getElementById('scheduleModal'));
        {{#if getrequest}}
            modal.show();
        {{else}}
            changeGroup('A');
        {{/if}}

    };

    function checkEnable() {
        let bTermSelected = document.getElementById('termSelect').value !== '';
        let bProgramSelected = document.getElementById('programSelect').value !== '';
        let bGroupSelected = document.getElementById('groupSelect').value !== '';

        if (bTermSelected && bProgramSelected && bGroupSelected) {
            document.getElementById('modalSubmit').removeAttribute('disabled');
        } else {
            document.getElementById('modalSubmit').disabled = 'disabled';
        }
    }

    function changeGroup(group) {
        // Disable all groups
        hideAllGroups();
        // enable the current one
        document.getElementById('group' + group).removeAttribute('hidden');
        document.getElementById('btn' + group).setAttribute('class', 'btn btn-primary');
        visibleGroup = group;

    }

    function hideAllGroups() {
        {{#each groupArray}}
            document.getElementById("group{{groupLetter}}").setAttribute('hidden', '');
            document.getElementById("btn{{groupLetter}}").setAttribute('class', 'btn btn-secondary');
        {{/each}}

    }

    /**
     * onclick handler for course offerings
     * @param idCO
     */
    function onCOClick(idCO, domObj) {
        //retrieving DOM objects by id
        const objCO = document.getElementById(domObj);
        const currObjCO = document.getElementById(currDOM);

        if (currCO === idCO) //if clicked CO is alreaady highlighted
        {
            objCO.removeAttribute('class', 'card bg-info mb-3 course-offering');
            objCO.setAttribute('class', 'card bg-secondary mb-3 course-offering');
            currCO = null;
            currDOM = null;
        } else {
            if (currCO !== null) { // if there's a differnt CO highlighted, otherwise its jusst null
                currObjCO.removeAttribute('class', 'card bg-info mb-3 course-offering');
                currObjCO.setAttribute('class', 'card bg-secondary mb-3 course-offering');
            }
            objCO.removeAttribute('class', 'card bg-secondary mb-3 course-offering');
            objCO.setAttribute('class', 'card bg-info mb-3 course-offering');
            currCO = idCO;
            currDOM = domObj;
        }

    }

    async function onCellClick(idCell, tSlot, cellCO) {
        console.log('Registered click');
        if (currCO) {
            //if not blank
            if (tSlot) {
                console.log('Deleting');
                //If the selected CO is not the same as the current CO
                if (cellCO !== currCO) {
                    await fetch('/schedule', {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({id: tSlot}),
                    });
                }
            }
            try {
                // Adding in a room number on save
                let ClassroomId = document.getElementById('classroomSelect' + visibleGroup).value;

                const response = await fetch('/schedule', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        idCell: idCell,
                        CO: currCO,
                        ClassroomId: ClassroomId,
                    }),
                });

                if (!response.ok) {
                    throw new Error('Failed to update schedule');
                }

                const data = await response.json();
                // Access retTSlot data here

                addTSToCell(idCell, data.retTSlot, data.xtraInfo);
            } catch (error) {
                // Handle errors
                console.error('Error updating schedule:', error);
            }


        }
    }


    function addTSToCell(idCell, tSlot, xtraInfo) {
        let oldTD = document.getElementById(idCell);
        let altIns = '';
        console.log(xtraInfo.altInsLast);
        if (xtraInfo.altInsLast !== undefined) {
            altIns = ' / ' + xtraInfo.altInsLast;
        }

        let newTD = '<td class="text-center" oncontextmenu="onCellRightClick(\'' + idCell + '\', \'' + tSlot.id + '\', \'' + tSlot.CourseOfferingId + '\')" ' +
                'onclick="onCellClick(\'' + idCell + '\', \'' + tSlot.id + '\', \'' + tSlot.CourseOfferingId + '\')" ' +
                'id="' + idCell + '">' +
                '<p>' + xtraInfo.course + '<br/>' +
                xtraInfo.insLast + altIns + '<br/>' +
                'Room: ' + xtraInfo.room + '<br/></p>' +
                '</td>';

        oldTD.outerHTML = newTD;
    }

    async function onCellRightClick(idCell, tSlot, cellCO) {
        await fetch('/schedule', {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({id: tSlot}),
        });

        let oldTD = document.getElementById(idCell);
        let newTD = '<td class=\'empty text-center\' nu="onCellRightClick(\'' + idCell + '\', \'' + '' + '\', \'' + '' + '\')" ' +
                'onclick="onCellClick(\'' + idCell + '\', \'' + '' + '\', \'' + '' + '\')" ' +
                'id="' + idCell + '">' +
                '<p></p>' +
                '</td>';
        oldTD.outerHTML = newTD;
    }


</script>
