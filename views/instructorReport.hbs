{{#if instructor}}
    <div>
        <div class="row">
            <div class="col-9">
                <h2><i>Instructor Report For:</i> {{instructor.lastName}}, {{instructor.firstName}}</h2>
            </div>
            <div class="col-3">
                <small>Report Generated: {{dateGen}}</small>
            </div>
        </div>
    </div>
    <table class="table table-bordered table-hover">
        <thead>
        <tr>
            <th scope="col">Time</th>
            <th scope="col">Monday</th>
            <th scope="col">Tuesday</th>
            <th scope="col">Wednesday</th>
            <th scope="col">Thursday</th>
            <th scope="col">Friday</th>
        </tr>
        </thead>
        <tbody>

        </tbody>
    </table>

<!-- instructorReport -->
{{else}}
    <h1>Nothing to display at the moment</h1>
{{/if}}


<!-- modal -->
<!-- Vertically centered scrollable modal -->
<div class="modal fade" id="instructorReportModal" tabindex="-1" aria-labelledby="instructorReportModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="instructorReportModalLabel">Create an Instructor Report For: </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
<!--           MODAL FORM CONTENTS ENCLOSED IN MODAL-BODY-->
            <div class="modal-body">
<!--                form begins here-->
                <form method="POST" action="/instructorReport/submit">
                    <div class="form-group">
                        <label for="selectInstructorInstructorReport" class="form-label mt-4">Instructors</label>
                        <select class="form-select" id="selectInstructorInstructorReport" required>
                            <option value="" disabled selected>Select Instructor</option>
                            {{#each instructorList}}
                                <option value="{{this._id}}">{{this.lastName}}, {{this.firstName}}</option>
                            {{/each}}
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="selectTermInstructorReport" class="form-label mt-4">Terms</label>
                        <select class="form-select" id="selectTermInstructorReport" required>
                            <option value="" disabled selected>Select Term</option>
                            {{#each termList}}
                                <option value="{{this._id}}">{{this.termNumber}}</option>
                            {{/each}}
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal">Close</button>
                        <button id="submitBtn" type="submit" class="btn btn-outline-success" >Save changes</button>
                    </div>
                </form>
<!--                Form ends here-->

            </div>
        </div>
    </div>
</div>

<div class="btnPairsCustom">
    <button id="newInstructorReportBtn" type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#instructorReportModal">
        New Report</button>
    <button class="btn btn-outline-success" onclick="window.print()">Print this page</button>
</div>
<script defer>
    'use strict';
    // $('#createAbbr').val("");
    // $('#createName').val("");

    let submitBtn= document.getElementById("submitBtn");
    let selectedInstructor = document.getElementById("selectInstructorInstructorReport");
    let selectedTerm = document.getElementById("selectTermInstructorReport");

    // On arrival the modal will open
    window.onload = function(){
        const modal = new bootstrap.Modal(document.getElementById("instructorReportModal"));
        modal.show();
    }

    function checkFormSelections(){
        if(selectedInstructor.value !== undefined && selectedTerm.value !== undefined)
        {
            submitBtn.disabled = false;
        }
        else{
            submitBtn.disabled = true;
        }
    }

    selectedInstructor.addEventListener("select", function(){
            checkFormSelections()
    });

    selectedTerm.addEventListener("select", function(){
        checkFormSelections()
    });


    // async function handleCreateInstructorReport() {
    //     // send a POST request to the router
    //     const response = await fetch('http://localhost:3000/InstructorReport', {
    //         method: 'POST',
    //         headers: {
    //             'Content-Type': 'application/json',
    //         },
    //         body: JSON.stringify({
    //             // use the val() method to get the value of a form input
    //             programName: $('#createName').val(),
    //             programAbbreviation: $('#createAbbr').val(),
    //
    //         }),
    //     });


</script>

