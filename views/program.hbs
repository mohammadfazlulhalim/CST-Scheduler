<div class="container p-2">
    <h2>Programs</h2>
    <table class="table">
        <thead>
        <tr>
            <th scope="col">Program Name</th>
            <th scope="col">Program Abbreviation</th>
            <th scope="col">Actions</th>
        </tr>
        </thead>
        <tbody>
        <!-- If a program exists load the table with the programs in it -->
        {{#if program}}
            {{#each program}}
                <tr>
                    <td>{{this.programName}}</td>
                    <td>{{this.programAbbreviation}}</td>
                    <td>
                        <button type="button" class="btn btn-primary btn-sm edit-btn" data-toggle="modal"
                                data-target="#editModal{{@index}}">Edit
                        </button>
                        <button type="button" class="btn btn-danger btn-sm" data-toggle="modal"
                                data-target="#deleteModal{{@index}}">Delete
                        </button>
                    </td>
                </tr>
                <div class="invalid-feedback">{{putErr.programAbbreviation}}</div>

                <!-- Edit Modal for each program -->
                <div class="modal fade" id="editModal{{@index}}" tabindex="-1" role="dialog"
                     aria-labelledby="editModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="editModalLabel">Edit Program: <span
                                        class="text-info">{{this.programName}}</span></h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <!-- form for editing -->
                                <form action="/program">
                                    <label for="editName{{@index}}">Program Name:</label>
                                    <input type="text" class="form-control {{#if putErr.programName}}is-invalid{{/if}}"
                                           id="editName{{@index}}" name="editName" value="{{#if
                                            putErr.programName}}{{putSubmittedProgram.programName}}{{else}}{{this.programName}}{{/if}}">
                                    <div id="editModalErrorContainer{{index}}"
                                         class="invalid-feedback">{{putErr.programName}}</div>

                                    <label for="editAbbr{{@index}}">Program Abbreviation:</label>
                                    <input type="text"
                                           class="form-control {{#if putErr.programAbbreviation}}is-invalid{{/if}}"
                                           id="editAbbr{{@index}}" name="editAbbr" value="{{#if
                                            putErr.programAbbreviation}}{{putSubmittedProgram.programAbbreviation}}{{else}}{{this.programAbbreviation}}{{/if}}">
                                    <div class="invalid-feedback">{{putErr.programAbbreviation}}</div>
                                    <div id="editModalErrorContainer{{index}}"
                                         class="invalid-feedback">{{putErr.programName}}</div>

                                    <!--                                    <input type="text" class="form-control" id="editAbbr{{@index}}" name="editID" value="{{this.id}}" hidden>-->
                                    <div class="mt-3 d-flex justify-content-end">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel
                                        </button>
                                        <button type="button" onclick="handleUpdateProgram('{{@index}}', '{{this.id}}')"
                                                class="btn btn-outline-info">Save changes
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Delete Modal -->
                <div class="modal fade" id="deleteModal{{@index}}" tabindex="-1" role="dialog"
                     aria-labelledby="deleteModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="deleteModalLabel">Delete Program: <span
                                        class="text-danger">{{this.programName}}</span></h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <p>Are you sure you want to delete the program <em>{{this.programName}}</em>?</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                <form action="/program">
                                    <input type="text" value="{{this.id}}" name="progID" id="progID" hidden>
                                    <button onclick="handleDeleteProgram('{{this.id}}', {{@index}})" type="button"
                                            class="btn btn-outline-danger delete" id="deleteProgram{{this.id}}">Delete
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>


            {{/each}}
            <!-- else notify the user there is nothing to display at the moment-->
        {{else}}
            <tr>
                <td></td>
                <td>Nothing to display at the moment</td>
            </tr>
        {{/if}}
        </tbody>
    </table>

    <div>
        <a class="btn btn-outline-success" href="/administration">Return</a>
        <div class="float-end">
            <button type="button" class="btn btn-outline-success" data-toggle="modal" onclick="openAddModal()">Add new
                Program
            </button>
        </div>
    </div>
    <div>
        <p></p>
        {{#if putErr}}
            <div class="alert alert-warning" role="alert">
                <h4 class="alert-heading">Couldn't edit because:</h4>
                <ul>
                    {{#if putErr.programName}}
                        <li>{{putErr.programName}}</li>
                    {{/if}}
                    {{#if putErr.programAbbreviation}}
                        <li>{{putErr.programAbbreviation}}</li>
                    {{/if}}
                </ul>
            </div>
        {{/if}}
    </div>
    <!-- Add Modal -->
    <div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="addModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addModalLabel">Add Program</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <!-- form for creating/adding -->
                <form method="POST" action="/program">
                    <div class="modal-body">
                        <label for="createName">Program Name:</label>
                        <input type="text" class="form-control {{#if err.programName}}is-invalid{{/if}}" id="createName"
                               name="programName"
                               value="{{submittedProgram.programName}}">
                        <div id="progNameErr" class="invalid-feedback">{{err.programName}}</div>

                        <label for="createAbbr">Program Abbreviation:</label>
                        <input type="text" class="form-control {{#if err.programAbbreviation}}is-invalid{{/if}}"
                               id="createAbbr" name="programAbbreviation"
                               value="{{submittedProgram.programAbbreviation}}">
                        <div id="progAbbrErr" class="invalid-feedback">{{err.programAbbreviation}}</div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-outline-success" id="createProgram">Add</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Bootstrap JS and dependencies -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<!-- Add the Fetch API script -->
<script>
    'use strict';
    // create handler; needs to be reassigned after html loads again
    $('#createProgram').click(handleCreateProgram);

    function openAddModal()
    {
        $(".is-invalid").removeClass("is-invalid");
        $(".invalid-feedback").text("");
        $('#createAbbr').val("");
        $('#createName').val("");



        const modal = $('#addModal');
        modal.modal('show');
    }
    async function handleCreateProgram() {
        // send a POST request to the router
        const response = await fetch('http://localhost:3000/program', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                // use the val() method to get the value of a form input
                programName: $('#createName').val(),
                programAbbreviation: $('#createAbbr').val(),

            }),
        });

        // get the HTML text response
        const data = await response.text();
        // set the whole document's HTML to be the response
        document.documentElement.innerHTML = data;
        // re-add the click handler
        $('#createProgram').click(handleCreateProgram);
        // refresh the modal
        const modal = $('#addModal');
        modal.modal('hide');

        // if the response was not ok, pop up the modal
        if (!response.ok) {
            modal.modal('show');
        }
    }

    async function handleUpdateProgram(index, progID) {

        const response = await fetch('http://localhost:3000/program', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                // use the val() method to get the value of a form input
                programName: $('#editName' + index).val(),
                programAbbreviation: $('#editAbbr' + index).val(),
                progID: progID,

            }),
        });
        console.log('wer r out ' + JSON.stringify({
            // use the val() method to get the value of a form input
            programName: $('#editName' + index).val(),
            programAbbreviation: $('#editAbbr' + index).val(),
            progID: progID,

        }));
        // get the HTML text response
        const data = await response.text();
        // set the whole document's HTML to be the response
        console.log(data);
        document.documentElement.innerHTML = data;
        // re-add the click handler
        $('#createProgram').click(handleCreateProgram);
        // refresh the modal

        console.log('We have recreated the whole html');
        const modal = $('#editModal' + index);
        modal.modal('hide');

        // if the response was not ok, pop up the modal
        // if (!response.ok) {
        //     modal.modal("show");
        //     console.log("We are still showing our modal")
        // }
    }

    async function handleDeleteProgram(programID, index) {
        console.log('delete button clicked');
        // Get the program ID from the button's data attribute
        programID = programID.replace('deleteProgram', '');
        // Send a DELETE request to the router
        const response = await fetch(`http://localhost:3000/program`, {


            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({progID: programID}),
        });
        const data = await response.text();
        // set the whole document's HTML to be the response
        document.documentElement.innerHTML = data;
        // re-add the click handler
        $('#createProgram').click(handleCreateProgram);
        //$("#deleteProgram").click(handleDeleteProgram(programID, index));


        const modal = $('#deleteModal' + index); // Update the modal selector
        modal.modal('hide');

        //if the response was not ok, pop up the modal
        if (!response.ok) {
            modal.modal('show');
        }
    }

</script>

