<div class="container p-1">
    <div class="row mb-2">
        <h1 class="col-md-5">{{title}}</h1>
        <!--Empty spacer, to help with formatting-->
        <div class="col-md-5"></div>
        <!--Add button is at the top, for longer table lists-->
        <button type="button" class="btn btn-success col-md-2" data-toggle="modal" data-target="#addModal">Add New Instructor</button>
    </div>
    {{#if instructorList}}

        <table class="table table-striped">
            <thead class="table-primary">
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Office Number</th>
                <th>Phone Number</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
            </thead>
            <!--Here is where I loop through my array object and add in a <tr> for each loop, and a <td> for each object-->
            <tbody>
            {{#each instructorList}}
                <tr>
                    <td id="{{this.id}}firstName">{{this.firstName}}</td>
                    <td id="{{this.id}}lastName">{{this.lastName}}</td>
                    <td id="{{this.id}}officeNum">{{this.officeNum}}</td>
                    <td id="{{this.id}}phoneNum">{{this.phoneNum}}</td>
                    <td id="{{this.id}}email">{{this.email}}</td>

                    <td>
                        <button id="{{this.id}}edit" type="button" class="btn btn-primary editButton"
                                data-toggle="modal" data-target="#editModal">Edit</button>
                        <button id="{{this.id}}delete" type="button" class="btn btn-danger deleteButton"
                                data-toggle="modal" data-target="#deleteModal">Delete</button>
                    </td>
                </tr>
            {{/each}}
            </tbody>

        </table>

        <!-- Delete Modal -->
        <div class="modal fade" id="deleteModal" role="dialog" tabindex="-1" aria-labelledby="deleteModalLabel"
             aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title text-danger" id="deleteModalLabel">Delete Instructor </h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <form action="/instructor" method="POST">
                        <div class="modal-body">
                            <p id="deleteModalText">Are you sure you want to delete this instructor?</p>
                        </div>

                        <input type="text" id="deleteID" name="id" hidden/>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            <button type="button" id="deleteInstructor" class="btn btn-outline-danger">Delete</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Edit Modal -->
        <div class="modal fade" id="editModal" role="dialog" tabindex="-1" aria-labelledby="editModalLabel"
             aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title text-warning" id="editModalLabel">Edit Existing Instructor</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <form action="/instructor" method="POST">
                        <div class="modal-body">
                            <label hidden for="eInstructorID">Instructor Number:</label>
                            <input hidden type="text"
                                   class="form-control {{#if putErr.id}}is-invalid{{/if}}" id="eInstructorID"
                                   name="id" value="{{putSubmittedInstructor.id}}">
                            <div class="invalid-feedback">{{putErr.id}}</div>

                            <label for="eFirstName">First Name:</label>
                            <input type="text" class="form-control {{#if putErr.firstName}}is-invalid{{/if}}"
                                   id="eFirstName"
                                   name="firstName" value="{{putSubmittedInstructor.firstName}}">
                            <div class="invalid-feedback">{{putErr.firstName}}</div>


                            <label for="eLastName">Last Name:</label>
                            <input type="text" class="form-control {{#if putErr.lastName}}is-invalid{{/if}}"
                                   value="{{putSubmittedInstructor.lastName}}" id="eLastName" name="lastName">
                            <div class="invalid-feedback">{{putErr.lastName}}</div>

                            <label for="eOfficeNum">Office Number:</label>
                            <input type="text" class="form-control {{#if putErr.officeNum}}is-invalid{{/if}}"
                                   value="{{putSubmittedInstructor.officeNum}}" id="eOfficeNum" name="officeNum">
                            <div class="invalid-feedback">{{putErr.officeNum}}</div>

                            <label for="ePhoneNum">Phone Number:</label>
                            <input type="text" class="form-control {{#if putErr.phoneNum}}is-invalid{{/if}}"
                                   value="{{putSubmittedInstructor.phoneNum}}" id="ePhoneNum" name="phoneNum">
                            <div class="invalid-feedback">{{putErr.phoneNum}}</div>

                            <label for="eEmail">Email:</label>
                            <input type="text" class="form-control {{#if putErr.email}}is-invalid{{/if}}"
                                   value="{{putSubmittedInstructor.email}}" id="eEmail" name="email">
                            <div class="invalid-feedback">{{putErr.email}}</div>

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeEdit()">Cancel</button>
                            <button type="button" id="editInstructor" class="btn btn-outline-success">Save</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    {{else}}
        <p>There are no instructors stored</p>
    {{/if}}
    <!-- Add Modal - must be displayed even if no terms exist -->
    <div class="modal fade" id="addModal" role="dialog" tabindex="-1" aria-labelledby="addModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-success" id="addModalLabel">Create New Instructor</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form action="/instructor" method="POST">
                    <div class="modal-body">

                        <div class="invalid-feedback">{{err.id}}</div>

                        <label for="cFirstName">First Name:</label>
                        <input type="text" class="form-control {{#if err.firstName}}is-invalid{{/if}}" id="cFirstName"
                               name="firstName" value="{{submittedInstructor.firstName}}">
                        <div class="invalid-feedback">{{err.firstName}}</div>

                        <label for="cLastName">Last Name:</label>
                        <input type="text" class="form-control {{#if err.lastName}}is-invalid{{/if}}" id="cLastName"
                               name="lastName" value="{{submittedInstructor.lastName}}">
                        <div class="invalid-feedback">{{err.lastName}}</div>

                        <Label for="cOfficeNum">Office Number:</Label>
                        <input type="text" class="form-control {{#if err.officeNum}}is-invalid{{/if}}" id="cOfficeNum" name="officeNum" value="{{submittedInstructor.officeNum}}">
                        <div Class="invalid-feedback">{{err.officeNum}}</div>

                        <Label for="cPhoneNum">Phone Number:</Label>
                        <input type="text" class="form-control {{#if err.phoneNum}}is-invalid{{/if}}" id="cPhoneNum" name="phoneNum" value="{{submittedInstructor.phoneNum}}">
                        <div Class="invalid-feedback">{{err.phoneNum}}</div>

                        <Label for="cEmail">Email:</Label>
                        <input type="text" class="form-control {{#if err.email}}is-invalid{{/if}}" id="cEmail" name="Email" value="{{submittedInstructor.Email}}">
                        <div Class="invalid-feedback">{{err.email}}</div>


                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeAdd()">Cancel</button>
                        <button type="button" id="createInstructor" class="btn btn-outline-success">Create</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <a href="{{URL}}">
        <button class="btn btn-outline-success">Return</button>
    </a>
</div>
<!-- My own handlers for the form submits -->
<script>
    'use strict';

    reLinkButtons();

    /**
     * This function links the buttons on the page to their appropriate handlers
     */
    function reLinkButtons() {
        $('#createInstructor').click(handleCreateInstructor);
        $('#deleteInstructor').click(handleDeleteInstructor);
        $('#editInstructor').click(handleEditInstructor);
        $('.deleteButton').click(function() {
            handleDeleteModal(this.id.replace('delete', ''));
        });
        $('.editButton').click(function() {
            handleEditModal(this.id.replace('edit', ''));
        });
        $('.modal').on('hidden.bs.modal', function() {
            clearErrors();
        });
    }

    /**
     * This function handles what happens when a user clicks the "create" button
     * in the Create New Instructor modal
     * @returns {Promise<void>}
     */
    async function handleCreateInstructor() {
        // send a POST request to the router
        const response = await fetch('{{URL}}/instructor', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                // use the val() method to get the value of a form input
                //instructorID: $('#cInstructorID').val(),
                firstName: $('#cFirstName').val(),
                lastName: $('#cLastName').val(),
                officeNum: $('#cOfficeNum').val(),
                phoneNum: $('#cPhoneNum').val(),
                email: $('#cEmail').val()
            }),
        });

        // get the HTML text response
        const data = await response.text();
        const modal = '#addModal';

        loadResponse(modal, data, !response.ok);
    }

    /**
     * This function handles what happens when a user clicks the "Delete" button
     * in the Delete Instructor modal
     * @returns {Promise<void>}
     */
    async function handleDeleteInstructor() {
        // send a DELETE request to the router
        const response = await fetch('{{URL}}/instructor', {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                // use the val() method to get the value of a form input
                id: $('#deleteInstructor').val(),

            }),

        });


        // get the HTML text response
        const data = await response.text();
        const modal = '#deleteModal';

        loadResponse(modal, data, !response.ok);
    }

    /**
     * This function handles what happens when a user clicks the "Save" button
     * in the Edit Existing Instructor modal
     * @returns {Promise<void>}
     */
    async function handleEditInstructor() {
        const id = $('#editID').val();
        // send a PUT request to the router
        const response = await fetch('{{URL}}/instructor', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                // use the val() method to get the value of a form input
                id: $('#eInstructorID').val(),
                firstName: $('#eFirstName').val(),
                lastName: $('#eLastName').val(),
                officeNum: $('#eOfficeNum').val(),
                phoneNum: $('#ePhoneNum').val(),
                email:$('#eEmail').val(),

            }),
        });

        // get the HTML text response
        const data = await response.text();
        const modal = '#editModal';

        loadResponse(modal, data, !response.ok);
    }

    /**
     * This function loads a hidden form input in the delete modal with the ID of the term to delete
     * @param idToDelete    - The ID of the term to delete
     */
    function handleDeleteModal(idToDelete) {
        $('#deleteInstructor').val(idToDelete);
    }

    /**
     * This function loads the form in the Edit Existing Instructor modal with the information
     * of the term the user wants to edit
     * @param idToEdit    - The ID of the term being edited
     */
    function handleEditModal(idToEdit) {

        $('#eInstructorID').val(idToEdit);
        $('#eFirstName').val($(`#${idToEdit}firstName`).text());
        $('#eLastName').val($(`#${idToEdit}lastName`).text());
        $('#eOfficeNum').val($(`#${idToEdit}officeNum`).text());
        $('#ePhoneNum').val($(`#${idToEdit}phoneNum`).text());
        $('#eEmail').val($(`#${idToEdit}email`).text());
    }

    /**
     * As the server gives responses in HTML, the client needs to be able to parse that data.
     * This function replaces the HTML of the current page with the new HTML from the server
     * and pops up the last used modal if there were errors.
     * @param modalID   - The HTML id of the modal to pop up
     * @param data      - The HTML response from the server
     * @param showModal - True to show the modal, false to hide the modal
     */
    function loadResponse(modalID, data, showModal) {
        // set the whole document's HTML to be the response
        document.documentElement.innerHTML = data;
        // re-add the click handlers
        reLinkButtons();
        // refresh the modal
        const modal = $(modalID);
        modal.modal('hide');

        // if the response was not ok, pop up the modal
        if (showModal) {
            modal.modal('show');
        }
    }

    function clearErrors() {
        // Clear error messages or styling for input fields
        $('.is-invalid').removeClass('is-invalid');
        $('.invalid-feedback').text('');

        // $('#cInstructorID').val('');
        $('#cFirstName').val('');
        $('#cLastName').val('');
        $('#cOfficeNum').val('');
        $('#cPhoneNum').val('');
        $('#cEmail').val('');

    }

    function closeEdit() {
        $('#editModal').modal('hide');
    }

    function closeAdd() {
        $('#addModal').modal('hide');
    }

</script>
